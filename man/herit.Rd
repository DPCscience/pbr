% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/herit.R
\name{herit}
\alias{herit}
\alias{herit.lmerMod}
\title{Calculate heritability from fitted model}
\usage{
herit(object, exp, ...)

\method{herit}{lmerMod}(object, exp, ...)
}
\arguments{
\item{object}{A model object. See \emph{Details} for accepted classes.}

\item{exp}{A quoted expression used to calculate the heritability. For instance,
\code{"geno / (geno + (Residual / r))"}.}

\item{...}{Other arguments to pass. This is generally a list of other objects
that are in \code{exp}, but may not be found in \code{object}. For instance, if
the argument \code{exp = "geno / (geno + (Residual / r))"} was passed, you would
also pass the argument \code{r = 2}.}
}
\description{
Calculates the heritability (on an entry-mean basis) of a trait given a fitted model object
}
\details{
Accepted classes for \code{object} are:

\itemize{
  \item{\code{lm} - CURRENTLY UNAVAILABLE}
  \item{\code{lmerMod}}
}
}
\examples{

# Use the gauch.soy dataset
data("gauch.soy")

# Filter
gauch_soy1 <- gauch.soy \%>\%
  group_by(env) \%>\%
  filter(n_distinct(gen, rep) == 28)

# Set the number of reps and number of environments
n_r <- 4
n_e <- 36

# Fit a linear model using lm
mod <- lmer(yield ~ (1|gen) + env + (1|gen:env), data = gauch_soy1)
# Calculate heritability
herit(object = mod, exp = "gen / (gen + (gen:env / n_e) + (Residual / n_r))",
      n_r = n_r, n_e = n_e)

}
